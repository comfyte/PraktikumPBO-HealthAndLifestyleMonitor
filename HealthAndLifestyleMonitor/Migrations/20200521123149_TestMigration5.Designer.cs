// <auto-generated />
using HealthAndLifestyleMonitor;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HealthAndLifestyleMonitor.Migrations
{
    [DbContext(typeof(HLDatabaseContext))]
    [Migration("20200521123149_TestMigration5")]
    partial class TestMigration5
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4");

            modelBuilder.Entity("HealthAndLifestyleMonitor.DatabaseModels.AirMinumModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<float>("Jumlah")
                        .HasColumnType("REAL");

                    b.Property<string>("Tanggal")
                        .HasColumnType("TEXT");

                    b.Property<string>("Waktu")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("DaftarAirMinum");
                });

            modelBuilder.Entity("HealthAndLifestyleMonitor.DatabaseModels.JadwalObatModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Deskripsi")
                        .HasColumnType("TEXT");

                    b.Property<string>("Hari")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nama")
                        .HasColumnType("TEXT");

                    b.Property<string>("Waktu")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("DaftarJadwalObat");
                });

            modelBuilder.Entity("HealthAndLifestyleMonitor.DatabaseModels.TekananDarahModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Diastolik")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Sistolik")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TanggalWaktu")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("DaftarTekananDarah");
                });

            modelBuilder.Entity("HealthAndLifestyleMonitor.DatabaseModels.UserPref", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("BoolValue")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IntValue")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("StringValue")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("UserPrefs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BoolValue = false,
                            IntValue = 0,
                            Name = "temperature-unit",
                            StringValue = "C"
                        },
                        new
                        {
                            Id = 2,
                            BoolValue = false,
                            IntValue = 0,
                            Name = "weather-location",
                            StringValue = "Yogyakarta"
                        },
                        new
                        {
                            Id = 3,
                            BoolValue = false,
                            IntValue = 120,
                            Name = "sistolik-max"
                        },
                        new
                        {
                            Id = 4,
                            BoolValue = false,
                            IntValue = 80,
                            Name = "diastolik-max"
                        },
                        new
                        {
                            Id = 5,
                            BoolValue = false,
                            IntValue = 90,
                            Name = "sistolik-min"
                        },
                        new
                        {
                            Id = 6,
                            BoolValue = false,
                            IntValue = 60,
                            Name = "diastolik-min"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
